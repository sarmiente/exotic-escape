---
import { t } from "i18next";
import { Icon } from "astro-icon/components";
const services = [
  {
    title: t("nav.inter"),
    subtitle: t("services.sub-one"),
    image:
      "https://images.unsplash.com/photo-1606964212858-c215029db704?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    content: t("services.one"),
  },
  {
    title: t("nav.docs"),
    subtitle: t("services.sub-two"),
    image:
      "https://images.unsplash.com/photo-1450101499163-c8848c66ca85?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    content: t("services.two"),
  },
  {
    title: t("nav.distr"),
    subtitle: t("services.sub-three"),
    image:
      "https://images.unsplash.com/photo-1493946740644-2d8a1f1a6aff?q=80&w=2090&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    content: t("services.three"),
  },
  {
    title: t("nav.cons"),
    subtitle: t("services.sub-four"),
    image:
      "https://images.unsplash.com/photo-1554902843-260acd0993f8?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    content: t("services.four"),
  },
  {
    title: t("nav.sure"),
    subtitle: t("services.sub-five"),
    image:
      "https://images.unsplash.com/photo-1605732562742-3023a888e56e?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    content: t("services.five"),
  },
  {
    title: t("nav.per"),
    subtitle: t("services.sub-six"),
    image:
      "https://images.unsplash.com/photo-1721937127582-ed331de95a04?q=80&w=1937&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
    content: t("services.six"),
  },
];
---

<div
  x-cloak
  style="display: none;"
  x-show="modalIsOpen"
  x-transition.opacity.duration.200ms
  x-trap.inert.noscroll="modalIsOpen"
  @keydown.esc.window="modalIsOpen = false"
  @click.self="modalIsOpen = false"
  class="fixed inset-0 z-30 flex items-end justify-center bg-black/20 p-12 backdrop-blur-md sm:items-center"
  role="dialog"
  aria-modal="true"
  aria-labelledby="defaultModalTitle"
>
  <!-- Modal Dialog -->
  <div
    x-show="modalIsOpen"
    x-transition:enter="transition ease-out duration-200 delay-100 motion-reduce:transition-opacity"
    x-transition:enter-start="opacity-0 scale-50"
    x-transition:enter-end="opacity-100 scale-100"
    class="flex flex-col gap-2 overflow-hidden rounded-md border border-neutral-300 bg-white text-neutral-600"
  >
    <!-- Dialog Header -->
    <div
      class="hidden md:flex items-center justify-between border-b border-neutral-300 bg-neutral-50/60 p-4"
    >
      <h3
        id="defaultModalTitle"
        class="font-semibold tracking-wide text-neutral-900"
      >
      </h3>
      <button @click="modalIsOpen = false" aria-label="close modal">
        <Icon class="size-6" name="close" />
      </button>
    </div>

    <div class="p-4">
      <div
        class="bg-gray-300 p-0 sm:p-6 relative max-w-3xl h-auto flex flex-wrap gap-2 rounded-3xl border border-gray-100 sm:flex-nowrap"
      >
        <div class="w-full text-center lg:w-1/2 swiper rounded-xl">
          <div class="swiper-wrapper w-full rounded-xl hidden sm:flex">
            {
              services.map((item) => (
                <div class="swiper-slide p-2 md:h-full rounded-xl">
                  <li class="group relative rounded-xl">
                    <img
                      alt="Fotos de servicios de transporte nautico"
                      src={item.image}
                      class="absolute w-full h-96 object-cover opacity-75  rounded-xl"
                    />
                    <div class="relative p-6 lg:p-8 bg-rich-black opacity-75 transition-opacity rounded-xl ">
                      <p class="text-xs font-medium uppercase tracking-widest text-white">
                        {item.subtitle}
                      </p>

                      <p class="text-xl font-hero text-white sm:text-2xl">
                        {item.title}
                      </p>
                    </div>
                  </li>
                </div>
              ))
            }
          </div>
        </div>

        <!-- Formulario -->
        <div class="w-full p-4 text-center lg:w-1/2">
          <form 
                method="POST"
                id="formDos" 
                data-astro-reload
                class="needs-validation space-y-6">

                 <!-- Add your Web3Forms Access Key -->
                 <input
                 type="hidden"
                 name="access_key"
                 value={import.meta.env.PUBLIC_ACCESS_KEY}
               />
                <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
            <!-- Input de Nombre -->
            <div>
              <label class="sr-only" for="name">{t("cta.name")}</label>
              <input
                required
                class="w-full rounded-lg border-gray-200 p-3 text-sm font-body"
                placeholder={t("cta.name")}
                type="text"
                id="name"
              />
            </div>

            <!-- Inputs de Email y Teléfono -->
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
              <div>
                <label for="email_address" class="sr-only" for="email">{t("cta.mail")}</label>
                <input
                  id="email_address"
                  type="email"
                  name="email"
                  required
                  pattern="/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/"
                  class="w-full rounded-lg border-gray-200 p-3 text-sm font-body"
                  placeholder={t("cta.mail")}
                />
              </div>

              <div>
                <label class="sr-only" for="phone">{t("cta.phone")}</label>
                <input
                type="text"
                name="phone"
                id="phone"
                placeholder="+1 (555) 1234-567"
                required
                class="w-full rounded-lg border-gray-200 p-3 text-sm font-body"
                />
              </div>
            </div>

            <!-- Mensaje -->
            <div>
              <label class="sr-only" for="message">{t("contact.title")}</label>
              <textarea
                name="message"
                class="w-full h-32 rounded-lg border-gray-200 p-3 text-sm form-textarea resize-none font-body"
                placeholder={t("cta.msg")}
                id="message"></textarea>
              <div class="text-center py-2">
                <label class="text-sm">
                  <input required type="checkbox" name="terms" />
                  {t("cta.privacy")}
                </label>
              </div>
            </div>

            <!-- Botón -->
            <div class="mt-4">
              <button
                type="submit"
                class="inline-block w-full rounded-lg bg-true-blue hover:bg-oxford-blue px-5 py-3 font-medium text-white sm:w-auto"
              >
                {t("cta.btn")}
              </button>
              
            </div>
            <div id="resultDos" class="mt-3 text-center font-body"></div>
          </form>
        </div>
      </div>
      <!-- Dialog Footer -->
      <div
        class="flex flex-col-reverse justify-between gap-2 border-neutral-300 bg-neutral-50/60 p-4 sm:flex-row sm:items-center md:justify-end"
      >
        <button
          @click="modalIsOpen = false"
          type="button"
          class="cursor-pointer whitespace-nowrap rounded-md px-4 py-2 text-center text-sm font-medium tracking-wide text-neutral-600 transition hover:opacity-75 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100 active:outline-offset-0 dark:text-neutral-300 dark:focus-visible:outline-white"
        >
          {t("cta.cnl")}
        </button>
      </div>
    </div>
  </div>
</div>

<style>
 

  .validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .invalid,
  .validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>

  // use astro:page-load event if you are using View Transitions
  document.addEventListener(
    "astro:page-load",
    () => {
      const formDos = document.getElementById("formDos");
      const resultDos = document.getElementById("resultDos");

      formDos.addEventListener("submit", function (e) {
        e.preventDefault();
        formDos.classList.add("validated");
        if (!formDos.checkValidity()) {
          formDos.querySelectorAll(":invalid")[0].focus();
          return;
        }
        const formData = new FormData(formDos);
        const object = Object.fromEntries(formData);
        const json = JSON.stringify(object);
        
        resultDos.innerHTML = "Sending...";

        fetch("https://api.web3forms.com/submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: json,
        })
          .then(async (response) => {

            let json = await response.json();
            if (response.status == 200) {
              resultDos.classList.add("text-oxford-blue");
              resultDos.innerHTML = "¡Correo enviado con éxito! Nos comunicaremos en menos de 24 horas."
            } else {
              console.log(response);
              resultDos.classList.add("text-red-500");
              resultDos.innerHTML = json.message;
            }
          })
          .catch((error) => {
            console.log(error);
            resultDos.innerHTML = "Something went wrong!";
          })
          .then(function () {
            formDos.reset();
            formDos.classList.remove("validated");
            setTimeout(() => {
              resultDos.style.display = "none";
            }, 10000);
          });
      });
    },
    { once: true }
  );
</script>




<script
is:inline
defer
src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script>
// @ts-nocheck
const swiper = new Swiper(".swiper", {
  autoplay: {
    delay: 5000,
  },
  direction: "horizontal",
});
</script>
